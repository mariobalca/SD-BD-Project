CREATE TABLE Users(
	id INTEGER PRIMARY KEY,
	Username CHAR(50) NOT NULL,
	Password CHAR(256),
	Balance	REAL NOT NULL,
	UserToken CHAR(256),
  UserSecret CHAR(256)
);

CREATE TABLE Projects(
	id INTEGER PRIMARY KEY,
	Name CHAR(100) NOT NULL,
	Deadline DATETIME NOT NULL,
	Objective REAL NOT NULL,
	Description TEXT NOT NULL,
	Active INTEGER NOT NULL,
	OwnerUserId INTEGER NOT NULL,
	TumblrPostId INTEGER ,
	Reblog_key Text,
	FOREIGN KEY (OwnerUserId) REFERENCES Users(id)
);

CREATE TABLE Administrators(
	id INTEGER PRIMARY KEY,
	ProjectId INTEGER NOT NULL,
	UserId INTEGER NOT NULL,
	FOREIGN KEY (UserId) REFERENCES Users(id),
	FOREIGN KEY (ProjectId) REFERENCES Projects(id) ON DELETE CASCADE
);

CREATE TABLE Rewards(
	id INTEGER PRIMARY KEY,
	MinValue REAL NOT NULL,
	Name CHAR(100) NOT NULL,
	Description TEXT NOT NULL,
	ProjectId INTEGER NOT NULL,
	FOREIGN KEY (ProjectId) REFERENCES Projects(id) ON DELETE CASCADE
);

CREATE TABLE Rewards_Users(
	id INTEGER PRIMARY KEY,
	RewardId INTEGER NOT NULL,
	WinnerUserId INTEGER NOT NULL,
	OwnerUserId INTEGER NOT NULL,
	Flag INTEGER NOT NULL,
	FOREIGN KEY (WinnerUserId) REFERENCES Users(id),
	FOREIGN KEY (OwnerUserId) REFERENCES Users(id),
	FOREIGN KEY (RewardId) REFERENCES Rewards(id) ON DELETE CASCADE
);

CREATE TABLE Extras(
	id INTEGER PRIMARY KEY,
	MinValue REAL NOT NULL,
	Name CHAR(100) NOT NULL,
	Description TEXT NOT NULL,
	ProjectId INTEGER NOT NULL,
	FOREIGN KEY (ProjectId) REFERENCES Projects(id) ON DELETE CASCADE
);

CREATE TABLE Transactions(
	id INTEGER PRIMARY KEY,
	UserId INTEGER NOT NULL,
	ProjectId INTEGER NOT NULL,
	Value REAL NOT NULL,
	PathId INTEGER NOT NULL,
	FOREIGN KEY (PathId) REFERENCES Paths(id) ON DELETE CASCADE
	FOREIGN KEY (ProjectId) REFERENCES Projects(id) ON DELETE CASCADE,
	FOREIGN KEY (UserId) REFERENCES Users(id)
);

CREATE TABLE Messages(
	id INTEGER PRIMARY KEY,
	ProjectId INTEGER NOT NULL,
	Subject CHAR(100) NOT NULL,
	Question TEXT NOT NULL,
	Response TEXT,
	FromUserId INTEGER NOT NULL,
	FOREIGN KEY (FromUserId) REFERENCES Users(id),
	FOREIGN KEY (ProjectId) REFERENCES Projects(id) ON DELETE CASCADE
);

CREATE TABLE Paths(
	id INTEGER PRIMARY KEY,
	Name CHAR(50) NOT NULL,
	ProjectId INTEGER NOT NULL,
	Description TEXT NOT NULL,
	FOREIGN KEY (ProjectId) REFERENCES Projects(id) ON DELETE CASCADE
);

CREATE TABLE Logs(
	id INTEGER PRIMARY KEY,
	UserId INTEGER NOT NULL,
	RequestId INTEGER NOT NULL,
	Response INTEGER NOT NULL,
	FOREIGN KEY (UserId) REFERENCES Users(id)
);
